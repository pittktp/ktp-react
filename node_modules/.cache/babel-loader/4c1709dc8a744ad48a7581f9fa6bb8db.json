{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webpage\\\\KTP\\\\ktp-react\\\\src\\\\views\\\\App.js\";\n// Packages\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Bootstrap\n\nimport Toast from 'react-bootstrap/Toast'; // Custom\n\nimport Home from './Home';\nimport Login from './Login';\nimport Members from './Members';\nimport PointsLog from './PointsLog';\nimport EditMembers from './EditMembers';\nimport Profile from './Profile';\nimport actions from '../redux/auth/actions';\nimport toastActions from '../redux/toast/actions';\n\nfunction App(props) {\n  useEffect(() => {\n    // Checks to see if there is a saved token from another session\n    // and attempts to reauthenticate without logging in\n    if (localStorage.getItem('token') && !props.isLoading && !props.isAuthenticated) {\n      props.validate();\n    } // Set the background gradient colors to the KTP official colors if not already set\n\n\n    let bodyElem = document.body;\n    let hasColor1 = bodyElem.style.getPropertyValue('--prof-col1') !== '';\n    let hasColor2 = bodyElem.style.getPropertyValue('--prof-col2') !== '';\n\n    if (!hasColor1 && !hasColor2) {\n      bodyElem.style.setProperty('--prof-color1', '#28B463');\n      bodyElem.style.setProperty('--prof-color2', '#145BBD');\n    }\n  });\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/members\",\n    component: Members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/points\",\n    component: PointsLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/edit-members\",\n    component: EditMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/profile/:id\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Toast, {\n    className: \"ktp-toast\",\n    show: props.toast.visible,\n    onClose: props.clearToast,\n    style: {\n      backgroundColor: props.toast.color\n    },\n    delay: 3000,\n    autohide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, props.toast.msg)));\n} // Mapping Redux State to Component Props\n\n\nconst mapStateToProps = state => ({\n  token: state.auth.token,\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  toast: state.toast\n}); // Mapping Redux Action Creators to Component Prop Functions\n\n\nconst mapDispatchToProps = dispatch => ({\n  validate: () => dispatch(actions.validate()),\n  clearToast: () => dispatch(toastActions.clear())\n}); // Connects Redux and Redux Mappings to Component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Webpage/KTP/ktp-react/src/views/App.js"],"names":["React","useEffect","connect","BrowserRouter","Router","Route","Switch","Toast","Home","Login","Members","PointsLog","EditMembers","Profile","actions","toastActions","App","props","localStorage","getItem","isLoading","isAuthenticated","validate","bodyElem","document","body","hasColor1","style","getPropertyValue","hasColor2","setProperty","toast","visible","clearToast","backgroundColor","color","msg","mapStateToProps","state","token","auth","mapDispatchToProps","dispatch","clear"],"mappings":"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","sourcesContent":["// Packages\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// Bootstrap\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n// Custom\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Members from './Members';\r\nimport PointsLog from './PointsLog';\r\nimport EditMembers from './EditMembers';\r\nimport Profile from './Profile';\r\nimport actions from '../redux/auth/actions';\r\nimport toastActions from '../redux/toast/actions';\r\n\r\nfunction App(props) {\r\n\r\n  useEffect(() => {\r\n    // Checks to see if there is a saved token from another session\r\n    // and attempts to reauthenticate without logging in\r\n    if (localStorage.getItem('token') && !props.isLoading && !props.isAuthenticated) {\r\n      props.validate();\r\n    }\r\n\r\n    // Set the background gradient colors to the KTP official colors if not already set\r\n    let bodyElem = document.body;\r\n    let hasColor1 = bodyElem.style.getPropertyValue('--prof-col1') !== '';\r\n    let hasColor2 = bodyElem.style.getPropertyValue('--prof-col2') !== '';\r\n    if (!hasColor1 && !hasColor2) {\r\n      bodyElem.style.setProperty('--prof-color1', '#28B463');\r\n      bodyElem.style.setProperty('--prof-color2', '#145BBD');\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/members' component={Members} />\r\n        <Route path='/points' component={PointsLog} />\r\n        <Route path='/edit-members' component={EditMembers} />\r\n        <Route path='/profile/:id' component={Profile} />\r\n      </Switch>\r\n      {/* Toast Put Here To Stay Visible Across Page Changes */}\r\n      <Toast\r\n        className='ktp-toast'\r\n        show={props.toast.visible}\r\n        onClose={props.clearToast}\r\n        style={{ backgroundColor: props.toast.color }}\r\n        delay={3000}\r\n        autohide\r\n      >\r\n        <Toast.Body>\r\n          { props.toast.msg }\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Mapping Redux State to Component Props\r\nconst mapStateToProps = state => ({\r\n  token: state.auth.token,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isLoading: state.auth.isLoading,\r\n  toast: state.toast,\r\n});\r\n\r\n// Mapping Redux Action Creators to Component Prop Functions\r\nconst mapDispatchToProps = dispatch => ({\r\n  validate: () => dispatch(actions.validate()),\r\n  clearToast: () => dispatch(toastActions.clear()),\r\n});\r\n\r\n// Connects Redux and Redux Mappings to Component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}