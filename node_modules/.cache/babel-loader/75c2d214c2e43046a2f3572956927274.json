{"ast":null,"code":"// Import Action Types\nimport { types } from './actions';\nimport Api from '../../services/KTPApi'; // Initial State of the auth object in the Redux store\n\nconst initialState = {\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: false,\n  isLoading: false,\n  member: null\n}; // Reducer function which handles everything relating to authentication\n// Essentially, one large switch statement that goes over all possible\n// outcomes from an authentication-related API call\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.LOAD_MEMBER:\n      return { ...state,\n        isLoading: true\n      };\n\n    case types.AUTH_LOADING:\n    case types.AUTH_VALIDATE:\n      Api.setToken(localStorage.getItem('token'));\n      return { ...state,\n        isLoading: true\n      };\n\n    case types.AUTH_VALID:\n    case types.MEMBER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        member: action.payload.member\n      };\n\n    case types.AUTH_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      Api.setToken(action.payload.token);\n      return {\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        member: action.payload.member\n      };\n\n    case types.AUTH_ERROR:\n    case types.LOGOUT:\n      localStorage.removeItem('token');\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/Webpage/KTP/ktp-react/src/redux/auth/reducer.js"],"names":["types","Api","initialState","token","localStorage","getItem","isAuthenticated","isLoading","member","state","action","type","LOAD_MEMBER","AUTH_LOADING","AUTH_VALIDATE","setToken","AUTH_VALID","MEMBER_LOADED","payload","AUTH_SUCCESS","setItem","AUTH_ERROR","LOGOUT","removeItem"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IADrB;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,MAAM,EAAE;AAJW,CAArB,C,CAOA;AACA;AACA;;AACA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,KAAK,CAACY,WAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKP,KAAK,CAACa,YAAX;AACA,SAAKb,KAAK,CAACc,aAAX;AACEb,MAAAA,GAAG,CAACc,QAAJ,CAAaX,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACA,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKP,KAAK,CAACgB,UAAX;AACA,SAAKhB,KAAK,CAACiB,aAAX;AACE,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,MAAM,EAAEE,MAAM,CAACQ,OAAP,CAAeV;AAJlB,OAAP;;AAMF,SAAKR,KAAK,CAACmB,YAAX;AACEf,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BV,MAAM,CAACQ,OAAP,CAAef,KAA7C;AACAF,MAAAA,GAAG,CAACc,QAAJ,CAAaL,MAAM,CAACQ,OAAP,CAAef,KAA5B;AACA,aAAO;AACLA,QAAAA,KAAK,EAAEO,MAAM,CAACQ,OAAP,CAAef,KADjB;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,MAAM,EAAEE,MAAM,CAACQ,OAAP,CAAeV;AAJlB,OAAP;;AAMF,SAAKR,KAAK,CAACqB,UAAX;AACA,SAAKrB,KAAK,CAACsB,MAAX;AACElB,MAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACA,aAAOrB,YAAP;;AACF;AACE,aAAOO,KAAP;AAnCJ;AAqCD","sourcesContent":["// Import Action Types\r\nimport { types } from './actions';\r\nimport Api from '../../services/KTPApi';\r\n\r\n// Initial State of the auth object in the Redux store\r\nconst initialState = {\r\n  token: localStorage.getItem('token') || null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  member: null\r\n};\r\n\r\n// Reducer function which handles everything relating to authentication\r\n// Essentially, one large switch statement that goes over all possible\r\n// outcomes from an authentication-related API call\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_MEMBER:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case types.AUTH_LOADING:\r\n    case types.AUTH_VALIDATE:\r\n      Api.setToken(localStorage.getItem('token'));\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case types.AUTH_VALID:\r\n    case types.MEMBER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        member: action.payload.member,\r\n      };\r\n    case types.AUTH_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      Api.setToken(action.payload.token);\r\n      return {\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        member: action.payload.member,\r\n      };\r\n    case types.AUTH_ERROR:\r\n    case types.LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}