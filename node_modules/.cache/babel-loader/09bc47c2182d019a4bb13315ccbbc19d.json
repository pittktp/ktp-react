{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webpage\\\\KTP\\\\ktp-react\\\\src\\\\views\\\\Login.js\";\n// Packages\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'; // Bootstrap\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form'; // Custom\n\nimport actions from '../redux/auth/actions';\nimport toastActions from '../redux/toast/actions';\nimport config from '../config';\nimport Layout from './layouts/Layout';\nimport '../styles/Login.css';\n\nfunction Login(props) {\n  // Component State and Constants\n  const TAB = 'auth-tab';\n  const ACTIVE_TAB = 'auth-tab-active';\n  const [active, setActive] = useState('#login');\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirm: '',\n    name: '',\n    code: ''\n  });\n  useEffect(() => {\n    // Redirect to Home if not logged in\n    if (props.isAuthenticated) {\n      props.history.push('/');\n    } // Login page should always use KTP official colors\n\n\n    let bodyElem = document.body;\n    bodyElem.style.setProperty('--prof-color1', '#28B463');\n    bodyElem.style.setProperty('--prof-color2', '#145BBD');\n  }, [props.isAuthenticated, props.history]); // Updates Component State for onChange events\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }; // Submits Login Form\n\n\n  const handleLogin = e => {\n    // Stops Form from sending its own HTTP Request\n    e.preventDefault(); // Deconstruct formData to values we need\n\n    const {\n      email,\n      password\n    } = formData; // Call Redux `login` action creator\n\n    props.login({\n      email,\n      password\n    }).then(data => {\n      if (!data.error) {\n        props.showToast('success', `Welcome, ${data.member.name}`);\n        props.history.push('/');\n      } else {\n        props.showToast('error', data.error);\n      }\n    });\n  }; // Submits Registration Form\n\n\n  const handleRegister = e => {\n    // Prevents Form from sending its own HTTP Request\n    e.preventDefault(); // Validate Registration Code\n\n    if (formData.code !== config.REG_CODE && formData.code !== config.REG_ADMIN_CODE) {\n      props.showToast('error', 'Invalid Registration Code');\n      return;\n    } // Deconstruct formData to values we need\n\n\n    const {\n      name,\n      email,\n      password,\n      code\n    } = formData; // Calls Redux `register` action creator\n\n    props.register({\n      name,\n      email,\n      password,\n      code\n    }).then(data => {\n      if (!data.error) {\n        props.showToast('success', `Welcome, ${data.member.name}`);\n        props.history.push('/');\n      } else {\n        props.showToast('error', data.error);\n      }\n    });\n  }; // Conditional Rendering of Login/Registration Forms\n\n\n  const form = active === '#login' ? /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"loginEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"loginPass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"forgot-pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Forgot Password?\")) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"registerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Full Name\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"registerEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"registerPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"registerConfirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"confirm\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    onChange: handleChange,\n    isInvalid: formData.confirm !== formData.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Your Passwords Must Match\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"registerCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"code\",\n    type: \"text\",\n    placeholder: \"Code\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Register Now\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ktp-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"auth-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    defaultActiveKey: \"#login\",\n    fill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    id: \"loginTab\",\n    className: active === '#login' ? ACTIVE_TAB : TAB,\n    href: \"#login\",\n    onSelect: key => setActive(key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    id: \"registerTab\",\n    className: active === '#register' ? ACTIVE_TAB : TAB,\n    href: \"#register\",\n    onSelect: key => setActive(key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, \"Register\")))), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      paddingBottom: '0px',\n      marginBottom: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, form)))));\n} // Maps Redux State to Component Props\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n}); // Maps Redux Action Creators to Component Prop Functions\n\n\nconst mapDispatchToProps = dispatch => ({\n  login: credentials => dispatch(actions.login(credentials)),\n  register: credentials => dispatch(actions.register(credentials)),\n  showToast: (type, msg) => dispatch(toastActions.show(type, msg))\n}); // Connects Redux and Redux Mappings to Component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));","map":{"version":3,"sources":["E:/Webpage/KTP/ktp-react/src/views/Login.js"],"names":["React","useEffect","useState","withRouter","connect","Button","Card","Nav","Form","actions","toastActions","config","Layout","Login","props","TAB","ACTIVE_TAB","active","setActive","formData","setFormData","email","password","confirm","name","code","isAuthenticated","history","push","bodyElem","document","body","style","setProperty","handleChange","e","target","value","handleLogin","preventDefault","login","then","data","error","showToast","member","handleRegister","REG_CODE","REG_ADMIN_CODE","register","form","key","paddingBottom","marginBottom","mapStateToProps","state","auth","mapDispatchToProps","dispatch","credentials","type","msg","show"],"mappings":"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","sourcesContent":["// Packages\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n// Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// Custom\r\nimport actions from '../redux/auth/actions';\r\nimport toastActions from '../redux/toast/actions';\r\nimport config from '../config';\r\nimport Layout from './layouts/Layout';\r\nimport '../styles/Login.css';\r\n\r\nfunction Login(props) {\r\n  // Component State and Constants\r\n  const TAB = 'auth-tab';\r\n  const ACTIVE_TAB = 'auth-tab-active';\r\n  const [active, setActive] = useState('#login');\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirm: '',\r\n    name: '',\r\n    code: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Redirect to Home if not logged in\r\n    if (props.isAuthenticated) {\r\n      props.history.push('/')\r\n    }\r\n\r\n    // Login page should always use KTP official colors\r\n    let bodyElem = document.body;\r\n    bodyElem.style.setProperty('--prof-color1', '#28B463');\r\n    bodyElem.style.setProperty('--prof-color2', '#145BBD');\r\n  }, [props.isAuthenticated, props.history]);\r\n\r\n  // Updates Component State for onChange events\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  // Submits Login Form\r\n  const handleLogin = e => {\r\n    // Stops Form from sending its own HTTP Request\r\n    e.preventDefault();\r\n\r\n    // Deconstruct formData to values we need\r\n    const { email, password } = formData;\r\n\r\n    // Call Redux `login` action creator\r\n    props.login({ email, password })\r\n      .then(data => {\r\n        if (!data.error) {\r\n          props.showToast('success', `Welcome, ${data.member.name}`);\r\n          props.history.push('/');\r\n        } else {\r\n          props.showToast('error', data.error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Submits Registration Form\r\n  const handleRegister = e => {\r\n    // Prevents Form from sending its own HTTP Request\r\n    e.preventDefault();\r\n\r\n    // Validate Registration Code\r\n    if (formData.code !== config.REG_CODE && formData.code !== config.REG_ADMIN_CODE) {\r\n      props.showToast('error', 'Invalid Registration Code');\r\n      return;\r\n    }\r\n\r\n    // Deconstruct formData to values we need\r\n    const { name, email, password, code } = formData;\r\n\r\n    // Calls Redux `register` action creator\r\n    props.register({ name, email, password, code })\r\n      .then(data => {\r\n        if (!data.error) {\r\n          props.showToast('success', `Welcome, ${data.member.name}`);\r\n          props.history.push('/');\r\n        } else {\r\n          props.showToast('error', data.error);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Conditional Rendering of Login/Registration Forms\r\n  const form = (active === '#login') ? (\r\n    <Form onSubmit={handleLogin}>\r\n      <Form.Group controlId='loginEmail'>\r\n        <Form.Control\r\n          name='email'\r\n          type='email'\r\n          placeholder='Email'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId='loginPass'>\r\n        <Form.Control\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <center>\r\n        <Button variant='primary' type='submit'>Login</Button>\r\n      </center>\r\n      <p id='forgot-pass'>Forgot Password?</p>\r\n    </Form>\r\n  ) : (\r\n    <Form onSubmit={handleRegister}>\r\n      <Form.Group controlId='registerName'>\r\n        <Form.Control\r\n          name='name'\r\n          type='text'\r\n          placeholder='Full Name'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId='registerEmail'>\r\n        <Form.Control\r\n          name='email'\r\n          type='email'\r\n          placeholder='Email'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId='registerPassword'>\r\n        <Form.Control\r\n          name='password'\r\n          type='password'\r\n          placeholder='Password'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId='registerConfirm'>\r\n        <Form.Control\r\n          name='confirm'\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n          onChange={handleChange}\r\n          isInvalid={formData.confirm !== formData.password}\r\n          required\r\n        />\r\n        <Form.Control.Feedback type='invalid'>\r\n          Your Passwords Must Match\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId='registerCode'>\r\n        <Form.Control\r\n          name='code'\r\n          type='text'\r\n          placeholder='Code'\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <center>\r\n        <Button variant='success' type='submit'>Register Now</Button>\r\n      </center>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <div id='login'>\r\n      <Layout>\r\n        <div id='ktp-content'>\r\n          <Card id='auth-card'>\r\n            <Card.Header>\r\n              <Nav defaultActiveKey='#login' fill>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    id='loginTab'\r\n                    className={active === '#login' ? ACTIVE_TAB : TAB}\r\n                    href='#login'\r\n                    onSelect={key => setActive(key)}\r\n                  >\r\n                    Login\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    id='registerTab'\r\n                    className={active === '#register' ? ACTIVE_TAB : TAB}\r\n                    href='#register'\r\n                    onSelect={key => setActive(key)}\r\n                  >\r\n                    Register\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Card.Header>\r\n            <Card.Body style={{ paddingBottom: '0px', marginBottom: '0px' }}>\r\n              {form}\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Maps Redux State to Component Props\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// Maps Redux Action Creators to Component Prop Functions\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (credentials) => dispatch(actions.login(credentials)),\r\n  register: (credentials) => dispatch(actions.register(credentials)),\r\n  showToast: (type, msg) => dispatch(toastActions.show(type, msg)),\r\n});\r\n\r\n// Connects Redux and Redux Mappings to Component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n"]},"metadata":{},"sourceType":"module"}