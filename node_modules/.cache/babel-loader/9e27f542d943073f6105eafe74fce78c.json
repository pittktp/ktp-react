{"ast":null,"code":"// Importing Packages\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'; // Importing our custom reducers\n\nimport authReducer from './auth/reducer';\nimport toastReducer from './toast/reducer'; // Redux state when you first load the site\n\nconst initialState = {}; // Combines multiple reducers into a single object in the store\n// so you can access any of their values from one object/one Redux call\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  toast: toastReducer\n}); // The thunk middleware allows us to create asynchronous Action Creators\n// for our Redux store. This is important since almost every change that happens\n// on the site requires interacting with our server and changing data in our DB.\n\nconst middleware = [thunk];\nvar store = null; // Try to enable Redux Devtools if in Development environment\n// Using a try/catch to default into development mode if you have the proper\n// browser extension installed\n\ntry {\n  store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n} catch (e) {\n  store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n} // Exporting the store so we can use it in other files\n\n\nexport default store;","map":{"version":3,"sources":["E:/Webpage/KTP/ktp-react/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","authReducer","toastReducer","initialState","rootReducer","auth","toast","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","e"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,IAAI,EAAEJ,WAD4B;AAElCK,EAAAA,KAAK,EAAEJ;AAF2B,CAAD,CAAnC,C,CAKA;AACA;AACA;;AACA,MAAMK,UAAU,GAAG,CAACP,KAAD,CAAnB;AAEA,IAAIQ,KAAK,GAAG,IAAZ,C,CAEA;AACA;AACA;;AACA,IAAI;AACFA,EAAAA,KAAK,GAAGZ,WAAW,CAACQ,WAAD,EAAcD,YAAd,EAA4BJ,OAAO,CACpDD,eAAe,CAAC,GAAGS,UAAJ,CADqC,EAEpDE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFa,CAAnC,CAAnB;AAID,CALD,CAKE,OAAOC,CAAP,EAAU;AACVH,EAAAA,KAAK,GAAGZ,WAAW,CAACQ,WAAD,EAAcD,YAAd,EAA4BL,eAAe,CAAC,GAAGS,UAAJ,CAA3C,CAAnB;AACD,C,CAED;;;AACA,eAAeC,KAAf","sourcesContent":["// Importing Packages\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Importing our custom reducers\r\nimport authReducer from './auth/reducer';\r\nimport toastReducer from './toast/reducer';\r\n\r\n// Redux state when you first load the site\r\nconst initialState = {};\r\n\r\n// Combines multiple reducers into a single object in the store\r\n// so you can access any of their values from one object/one Redux call\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  toast: toastReducer,\r\n});\r\n\r\n// The thunk middleware allows us to create asynchronous Action Creators\r\n// for our Redux store. This is important since almost every change that happens\r\n// on the site requires interacting with our server and changing data in our DB.\r\nconst middleware = [thunk];\r\n\r\nvar store = null;\r\n\r\n// Try to enable Redux Devtools if in Development environment\r\n// Using a try/catch to default into development mode if you have the proper\r\n// browser extension installed\r\ntry {\r\n  store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  ));\r\n} catch (e) {\r\n  store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\r\n}\r\n\r\n// Exporting the store so we can use it in other files\r\nexport default store;"]},"metadata":{},"sourceType":"module"}